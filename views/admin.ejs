<!DOCTYPE html>
<html>
<head>
    <title>Admin Dashboard</title>
    <link rel="stylesheet" href="/styles.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>
    <h1>Admin Dashboard</h1>
    
    <div id="status-message" class="status-message"></div>
    
    <!-- Add Chore Form -->
    <div class="add-chore-form">
        <h2>Add New Chore</h2>
        <form id="addChoreForm" onsubmit="return handleAddChore(event)">
            <div class="form-group">
                <input type="text" 
                       name="choreName" 
                       placeholder="Chore Name" 
                       required
                       minlength="3">
                <input type="text" 
                       name="assignedTo" 
                       placeholder="Assign To" 
                       required
                       minlength="2">
            </div>
            <button type="submit">Add Chore</button>
        </form>
    </div>

    <!-- Chores List -->
    <div class="chores-list">
        <div class="list-header">
            <h2>Current Chores</h2>
            <div class="filters">
                <select id="statusFilter" onchange="filterChores()">
                    <option value="all">All Status</option>
                    <option value="pending">Pending</option>
                    <option value="completed">Completed</option>
                </select>
                <input type="text" 
                       id="searchInput" 
                       placeholder="Search chores..."
                       oninput="filterChores()">
            </div>
        </div>

        <div id="choresList">
            <% if (chores.length === 0) { %>
                <div class="empty-state">
                    <p>No chores added yet! Add your first chore above.</p>
                </div>
            <% } else { %>
                <% chores.forEach(function(chore) { %>
                    <div class="chore-item" 
                         data-id="<%= chore.id %>"
                         data-name="<%= chore.name.toLowerCase() %>"
                         data-status="<%= chore.completed ? 'completed' : 'pending' %>">
                        <div class="chore-content">
                            <span class="chore-name"><%= chore.name %></span>
                            <span class="assigned-to">Assigned to: <%= chore.assignedTo %></span>
                            <span class="completion-status <%= chore.completed ? 'completed' : 'pending' %>">
                                <%= chore.completed ? 'Completed' : 'Pending' %>
                            </span>
                            <% if (chore.completedAt) { %>
                                <span class="completed-at">
                                    Completed: <%= new Date(chore.completedAt).toLocaleString() %>
                                </span>
                            <% } %>
                        </div>
                        <div class="chore-actions">
                            <button class="delete-chore" onclick="deleteChore(<%= chore.id %>)">
                                Delete
                            </button>
                        </div>
                    </div>
                <% }); %>
            <% } %>
        </div>
    </div>

    <a href="/logout" class="logout-btn">Logout</a>

    <script>
    function showMessage(message, type = 'success') {
        const statusDiv = document.getElementById('status-message');
        statusDiv.className = `status-message ${type}`;
        statusDiv.textContent = message;
        statusDiv.style.display = 'block';
        
        setTimeout(() => {
            statusDiv.style.opacity = '0';
            setTimeout(() => {
                statusDiv.style.display = 'none';
                statusDiv.style.opacity = '1';
            }, 300);
        }, 3000);
    }

    function handleAddChore(event) {
        event.preventDefault();
        const form = event.target;
        const formData = new FormData(form);
        
        fetch('/add-chore', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: new URLSearchParams(formData)
        })
        .then(response => {
            if (!response.ok) throw new Error('Failed to add chore');
            showMessage('Chore added successfully! ðŸŽ‰');
            location.reload();
        })
        .catch(error => {
            console.error('Error:', error);
            showMessage('Error adding chore', 'error');
        });
        
        return false;
    }

    function deleteChore(choreId) {
        const choreElement = document.querySelector(`[data-id="${choreId}"]`);
        
        if (confirm('Are you sure you want to delete this chore?')) {
            choreElement.classList.add('loading');
            
            fetch(`/delete-chore/${choreId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    choreElement.style.animation = 'slideOut 0.3s ease forwards';
                    setTimeout(() => {
                        choreElement.remove();
                        showMessage('Chore deleted successfully');
                        if (document.querySelectorAll('.chore-item').length === 0) {
                            location.reload(); // Show empty state
                        }
                    }, 300);
                } else {
                    throw new Error('Failed to delete chore');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showMessage('Error deleting chore', 'error');
                choreElement.classList.remove('loading');
            });
        }
    }

    function filterChores() {
        const searchTerm = document.getElementById('searchInput').value.toLowerCase();
        const statusFilter = document.getElementById('statusFilter').value;
        const chores = document.querySelectorAll('.chore-item');
        
        chores.forEach(chore => {
            const name = chore.dataset.name;
            const status = chore.dataset.status;
            const matchesSearch = name.includes(searchTerm);
            const matchesStatus = statusFilter === 'all' || status === statusFilter;
            
            chore.style.display = matchesSearch && matchesStatus ? 'flex' : 'none';
        });
    }
    </script>
</body>
</html>