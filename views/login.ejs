<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - Family Chore Tracker</title>
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="/css/components.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
</head>
<body class="landing-page">
    <div class="background-pattern"></div>

    <div class="floating-contact">
        <button class="contact-button" aria-label="Contact">
            <span class="contact-icon">üíå</span>
            <span class="contact-tooltip">Need help?</span>
        </button>
        <div class="contact-modal">
            <h3>Contact Admin</h3>
            <p>Email: <a href="mailto:inman@mail.com">inman@mail.com</a></p>
            <small>We'll respond within 24 hours</small>
        </div>
    </div>

    <div class="split-layout">
        <!-- Left side - Hero Section -->
        <div class="hero-section">
            <div class="hero-content">
                <h1 class="hero-title">Family Chore Tracker</h1>
                <p class="hero-subtitle">Making household management a family adventure</p>
                
                <div class="feature-grid">
                    <div class="feature-item animate-in" style="--delay: 0.1s">
                        <div class="feature-icon">‚ú®</div>
                        <h3>Easy Organization</h3>
                        <p>Simple, intuitive chore management for everyone</p>
                    </div>
                    <div class="feature-item animate-in" style="--delay: 0.2s">
                        <div class="feature-icon">üéØ</div>
                        <h3>Track Progress</h3>
                        <p>Watch tasks get completed in real-time</p>
                    </div>
                    <div class="feature-item animate-in" style="--delay: 0.3s">
                        <div class="feature-icon">üë®‚Äçüë©‚Äçüëß‚Äçüë¶</div>
                        <h3>Family Friendly</h3>
                        <p>Designed for both parents and children</p>
                    </div>
                    <div class="feature-item animate-in" style="--delay: 0.4s">
                        <div class="feature-icon">üåü</div>
                        <h3>Reward System</h3>
                        <p>Celebrate achievements together</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Right side - Login Form -->
        <div class="auth-section">
            <div class="auth-container">
                <div class="auth-header">
                    <h2>Welcome Back!</h2>
                    <p>Sign in to manage your family's chores</p>
                </div>

                <% if (typeof error !== 'undefined' && error) { %>
                    <div class="alert alert-error">
                        <i class="error-icon">‚ö†Ô∏è</i>
                        <%= error %>
                    </div>
                <% } %>

                <% if (typeof success !== 'undefined' && success) { %>
                    <div class="alert alert-success">
                        <i class="success-icon">‚úì</i>
                        <%= success %>
                    </div>
                <% } %>

                <form action="/login" method="POST" class="auth-form" id="loginForm">
                    <div class="form-group">
                        <label for="username">Username</label>
                        <div class="input-wrapper">
                            <svg class="input-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                                <circle cx="12" cy="7" r="4"></circle>
                            </svg>
                            <input 
                                type="text" 
                                id="username"
                                name="username" 
                                placeholder="Enter your username" 
                                required
                                class="form-input"
                                value="<%= typeof username !== 'undefined' ? username : '' %>"
                                autocomplete="username">
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="password">Password</label>
                        <div class="password-input-container input-wrapper">
                            <svg class="input-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                <rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect>
                                <path d="M7 11V7a5 5 0 0 1 10 0v4"></path>
                            </svg>
                            <input 
                                type="password" 
                                id="password"
                                name="password" 
                                placeholder="Enter your password" 
                                required
                                class="form-input"
                                autocomplete="current-password">
                            <button type="button" class="toggle-password" aria-label="Toggle password visibility">
                                üëÅÔ∏è
                            </button>
                        </div>
                    </div>

                    <button type="submit" class="button button-primary button-full" id="loginButton">
                        <span class="btn-text">Sign In</span>
                        <span class="btn-loader"></span>
                    </button>

                    <div class="auth-links">
                        <div class="auth-link-group">
                            <p>New to Family Chore Tracker?</p>
                            <a href="/signup" class="primary-link">Create an Account</a>
                        </div>
                        <div class="auth-link-group">
                            <p>Forgot your password?</p>
                            <a href="/reset-password" class="secondary-link">Reset Password</a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('loginForm');
        const submitButton = document.getElementById('loginButton');
        const togglePassword = document.querySelector('.toggle-password');
        const passwordInput = document.getElementById('password');

        // Toggle password visibility
        togglePassword.addEventListener('click', function() {
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            togglePassword.textContent = type === 'password' ? 'üëÅÔ∏è' : 'üëÅÔ∏è‚Äçüó®Ô∏è';
        });

        // Form submission handling
        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const username = document.getElementById('username').value.trim();
            const password = document.getElementById('password').value;

            if (!username || !password) {
                showError('Please fill in all fields');
                return;
            }

            // Show loading state and start melting animation
            submitButton.disabled = true;
            form.classList.add('melting');

            try {
                const response = await fetch('/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ username, password })
                });

                const data = await response.json();

                if (data.success) {
                    // Let the melting animation complete before redirect
                    setTimeout(() => {
                        window.location.href = '/dashboard';
                    }, 800);
                } else {
                    form.classList.remove('melting');
                    submitButton.disabled = false;
                    showError(data.error || 'Login failed');
                }
            } catch (error) {
                form.classList.remove('melting');
                submitButton.disabled = false;
                showError('An error occurred');
            }
        });

        // Error message handling
        function showError(message) {
            const existingError = document.querySelector('.alert-error');
            if (existingError) existingError.remove();

            const errorDiv = document.createElement('div');
            errorDiv.className = 'alert alert-error';
            errorDiv.innerHTML = `<i class="error-icon">‚ö†Ô∏è</i>${message}`;
            form.insertBefore(errorDiv, form.firstChild);
        }

        // Auto-hide messages
        const messages = document.querySelectorAll('.alert');
        messages.forEach(message => {
            setTimeout(() => {
                message.style.opacity = '0';
                setTimeout(() => message.remove(), 300);
            }, 5000);
        });
    });
    </script>

    <script>
    // Cursor glow effect
    document.addEventListener('DOMContentLoaded', function() {
        const cursor = document.querySelector('.cursor-glow');
        let isVisible = false;

        document.addEventListener('mousemove', (e) => {
            if (!isVisible) {
                cursor.style.display = 'block';
                isVisible = true;
            }
            
            cursor.style.left = e.clientX - 15 + 'px';
            cursor.style.top = e.clientY - 15 + 'px';
        });

        // Enhance button and input interactions
        const interactiveElements = document.querySelectorAll('button, input, .feature-item');
        
        interactiveElements.forEach(element => {
            element.addEventListener('mouseenter', () => {
                cursor.style.transform = 'scale(1.5)';
            });
            
            element.addEventListener('mouseleave', () => {
                cursor.style.transform = 'scale(1)';
            });
        });
    });

    // Add smooth scroll for iOS
    document.documentElement.style.scrollBehavior = 'smooth';
    </script>

    <div class="cursor-glow"></div>
</body>
</html>